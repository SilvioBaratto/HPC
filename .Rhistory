geom_vline(xintercept=19922944,
color = "black",linetype="dashed", size=0.35)+
annotate("text", x=58000, y=24000, label= "L1",color="Black")+
annotate("text", x=1800000, y=24000, label= "L2",color="Black")+
annotate("text", x=29900000, y=24000, label= "L3",color="Black")
intel <- ggplot(core_ib_intel,aes(x=X.bytes,y=Mbytes.sec,color="Intel IB",linetype="Core")) +
scale_x_continuous(trans='log2',name="Message Size Bytes",breaks=core_ib_openmpi$X.bytes) +
geom_point() + geom_line()+scale_y_continuous(breaks = seq(0,25000,1000),name="MB/s") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
geom_point(data=socket_ib_intel,aes(x=X.bytes,y=Mbytes.sec,color="Intel IB")) +
geom_line(data=socket_ib_intel,aes(x=X.bytes,y=Mbytes.sec,color="Intel IB",linetype="Socket")) +
geom_point(data=core_tcp,aes(x=X.bytes,y=Mbytes.sec,color="Intel tcp")) +
geom_line(data=core_tcp,aes(x=X.bytes,y=Mbytes.sec,color="Intel tcp",linetype="Core")) +
geom_point(data=socket_tcp,aes(x=X.bytes,y=Mbytes.sec,color="Intel tcp")) +
geom_line(data=socket_tcp,aes(x=X.bytes,y=Mbytes.sec,color="Intel tcp",linetype="Socket")) +
scale_color_manual(name="Protocol", values = c("#ffa600", "#003f5c"))+
scale_linetype_manual(name="Mapping",values=c(1,2))+
labs(title="Intel", subtitle="Thin node: core and socket mapping")  +
theme(plot.title = element_text(size = 15, face = "bold",hjust = 0.5,margin = margin(t = 12)),
plot.subtitle = element_text(size = 10, hjust = 0.5, margin = margin(t = 7, b = 10)),
axis.title = element_text(face = "bold"),
legend.text = element_text(margin = margin(t = 7, b = 7, r=12)),
axis.title.x = element_text(margin = margin(t = 10, b=10)),
axis.title.y = element_text(margin = margin(r = 10,l=10)),
axis.text = element_text(color= "#2f3030", face="bold"))+
geom_vline(xintercept=32768,
color = "black",linetype="dashed", size=0.35)+
geom_vline(xintercept=1048576,
color = "black",linetype="dashed", size=0.35)+
geom_vline(xintercept=19922944,
color = "black",linetype="dashed", size=0.35)+
annotate("text", x=58000, y=24000, label= "L1",color="Black")+
annotate("text", x=1800000, y=24000, label= "L2",color="Black")+
annotate("text", x=29900000, y=24000, label= "L3",color="Black")
grid.arrange(openmpi, intel, ncol=2)
openmpi <- ggplot(core_ib_openmpi,aes(x=X.bytes,y=Mbytes.sec,color="UCX IB",linetype="Core")) +
scale_x_continuous(trans='log2',name="Message Size Bytes",breaks=core_ib_openmpi$X.bytes) +
geom_point() + geom_line()+scale_y_continuous(breaks = seq(0,25000,1000),name="MB/s") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +
geom_point(data=core_ob1_tcp,aes(x=X.bytes,y=Mbytes.sec,color="OB1 tcp")) +
geom_line(data=core_ob1_tcp,aes(x=X.bytes,y=Mbytes.sec,color="OB1 tcp",linetype="Core")) +
geom_point(data=core_ob1_vader,aes(x=X.bytes,y=Mbytes.sec,color="OB1 vader")) +
geom_line(data=core_ob1_vader,aes(x=X.bytes,y=Mbytes.sec,color="OB1 vader",linetype="Core")) +
geom_point(data=socket_ib_openmpi,aes(x=X.bytes,y=Mbytes.sec,color="UCX IB")) +
geom_line(data=socket_ib_openmpi,aes(x=X.bytes,y=Mbytes.sec,color="UCX IB",linetype="Socket")) +
geom_point(data=socket_ob1_tcp,aes(x=X.bytes,y=Mbytes.sec,color="OB1 tcp")) +
geom_line(data=socket_ob1_tcp,aes(x=X.bytes,y=Mbytes.sec,color="OB1 tcp",linetype="Socket")) +
geom_point(data=socket_ob1_vader,aes(x=X.bytes,y=Mbytes.sec,color="OB1 vader")) +
geom_line(data=socket_ob1_vader,aes(x=X.bytes,y=Mbytes.sec,color="OB1 vader",linetype="Socket")) +
scale_color_manual(name="Protocol", values = c("#ffa600", "#bc5090", "#003f5c"))+
scale_linetype_manual(name="Mapping",values=c(1,2,3))+
labs(title="Openmpi", subtitle="Thind node: core and socket mapping")  +
theme(plot.title = element_text(size = 15, face = "bold",hjust = 0.5,margin = margin(t = 12)),
plot.subtitle = element_text(size = 10, hjust = 0.5, margin = margin(t = 7, b = 10)),
axis.title = element_text(face = "bold"),
legend.text = element_text(margin = margin(t = 7, b = 7, r=12)),
axis.title.x = element_text(margin = margin(t = 10, b=10)),
axis.title.y = element_text(margin = margin(r = 10,l=10)),
axis.text = element_text(color= "#2f3030", face="bold")) +
geom_vline(xintercept=32768,
color = "black",linetype="dashed", size=0.35)+
geom_vline(xintercept=1048576,
color = "black",linetype="dashed", size=0.35)+
geom_vline(xintercept=19922944,
color = "black",linetype="dashed", size=0.35)+
annotate("text", x=58000, y=24000, label= "L1",color="Black")+
annotate("text", x=1800000, y=24000, label= "L2",color="Black")+
annotate("text", x=29900000, y=24000, label= "L3",color="Black")
intel <- ggplot(core_ib_intel,aes(x=X.bytes,y=Mbytes.sec,color="Intel IB",linetype="Core")) +
scale_x_continuous(trans='log2',name="Message Size Bytes",breaks=core_ib_openmpi$X.bytes) +
geom_point() + geom_line()+scale_y_continuous(breaks = seq(0,25000,1000),name="MB/s") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
geom_point(data=socket_ib_intel,aes(x=X.bytes,y=Mbytes.sec,color="Intel IB")) +
geom_line(data=socket_ib_intel,aes(x=X.bytes,y=Mbytes.sec,color="Intel IB",linetype="Socket")) +
geom_point(data=core_tcp,aes(x=X.bytes,y=Mbytes.sec,color="Intel tcp")) +
geom_line(data=core_tcp,aes(x=X.bytes,y=Mbytes.sec,color="Intel tcp",linetype="Core")) +
geom_point(data=socket_tcp,aes(x=X.bytes,y=Mbytes.sec,color="Intel tcp")) +
geom_line(data=socket_tcp,aes(x=X.bytes,y=Mbytes.sec,color="Intel tcp",linetype="Socket")) +
scale_color_manual(name="Protocol", values = c("#ffa600", "#003f5c"))+
scale_linetype_manual(name="Mapping",values=c(1,2))+
labs(title="Intel", subtitle="Thin node: core and socket mapping")  +
theme(plot.title = element_text(size = 15, face = "bold",hjust = 0.5,margin = margin(t = 12)),
plot.subtitle = element_text(size = 10, hjust = 0.5, margin = margin(t = 7, b = 10)),
axis.title = element_text(face = "bold"),
legend.text = element_text(margin = margin(t = 7, b = 7, r=12)),
axis.title.x = element_text(margin = margin(t = 10, b=10)),
axis.title.y = element_text(margin = margin(r = 10,l=10)),
axis.text = element_text(color= "#2f3030", face="bold"))+
geom_vline(xintercept=32768,
color = "black",linetype="dashed", size=0.35)+
geom_vline(xintercept=1048576,
color = "black",linetype="dashed", size=0.35)+
geom_vline(xintercept=19922944,
color = "black",linetype="dashed", size=0.35)+
annotate("text", x=58000, y=24000, label= "L1",color="Black")+
annotate("text", x=1800000, y=24000, label= "L2",color="Black")+
annotate("text", x=29900000, y=24000, label= "L3",color="Black")
grid.arrange(openmpi, intel, ncol=2)
openmpi <- ggplot(core_ib_openmpi,aes(x=X.bytes,y=Mbytes.sec,color="UCX IB",linetype="Core")) +
scale_x_continuous(trans='log2',name="Message Size Bytes",breaks=core_ib_openmpi$X.bytes) +
geom_point() + geom_line()+scale_y_continuous(breaks = seq(0,25000,1000),name="MB/s") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +
geom_point(data=core_ob1_tcp,aes(x=X.bytes,y=Mbytes.sec,color="OB1 tcp")) +
geom_line(data=core_ob1_tcp,aes(x=X.bytes,y=Mbytes.sec,color="OB1 tcp",linetype="Core")) +
geom_point(data=core_ob1_vader,aes(x=X.bytes,y=Mbytes.sec,color="OB1 vader")) +
geom_line(data=core_ob1_vader,aes(x=X.bytes,y=Mbytes.sec,color="OB1 vader",linetype="Core")) +
geom_point(data=socket_ib_openmpi,aes(x=X.bytes,y=Mbytes.sec,color="UCX IB")) +
geom_line(data=socket_ib_openmpi,aes(x=X.bytes,y=Mbytes.sec,color="UCX IB",linetype="Socket")) +
geom_point(data=socket_ob1_tcp,aes(x=X.bytes,y=Mbytes.sec,color="OB1 tcp")) +
geom_line(data=socket_ob1_tcp,aes(x=X.bytes,y=Mbytes.sec,color="OB1 tcp",linetype="Socket")) +
geom_point(data=socket_ob1_vader,aes(x=X.bytes,y=Mbytes.sec,color="OB1 vader")) +
geom_line(data=socket_ob1_vader,aes(x=X.bytes,y=Mbytes.sec,color="OB1 vader",linetype="Socket")) +
scale_color_manual(name="Protocol", values = c("#ffa600", "#bc5090", "#003f5c"))+
scale_linetype_manual(name="Mapping",values=c(1,2,3))+
labs(title="Openmpi", subtitle="Thind node: core and socket mapping")  +
theme(plot.title = element_text(size = 13, face = "bold",hjust = 0.5,margin = margin(t = 12)),
plot.subtitle = element_text(size = 10, hjust = 0.5, margin = margin(t = 7, b = 10)),
axis.title = element_text(face = "bold"),
legend.text = element_text(margin = margin(t = 7, b = 7, r=12)),
axis.title.x = element_text(margin = margin(t = 10, b=10)),
axis.title.y = element_text(margin = margin(r = 10,l=10)),
axis.text = element_text(color= "#2f3030", face="bold")) +
geom_vline(xintercept=32768,
color = "black",linetype="dashed", size=0.35)+
geom_vline(xintercept=1048576,
color = "black",linetype="dashed", size=0.35)+
geom_vline(xintercept=19922944,
color = "black",linetype="dashed", size=0.35)+
annotate("text", x=58000, y=24000, label= "L1",color="Black")+
annotate("text", x=1800000, y=24000, label= "L2",color="Black")+
annotate("text", x=29900000, y=24000, label= "L3",color="Black")
intel <- ggplot(core_ib_intel,aes(x=X.bytes,y=Mbytes.sec,color="Intel IB",linetype="Core")) +
scale_x_continuous(trans='log2',name="Message Size Bytes",breaks=core_ib_openmpi$X.bytes) +
geom_point() + geom_line()+scale_y_continuous(breaks = seq(0,25000,1000),name="MB/s") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
geom_point(data=socket_ib_intel,aes(x=X.bytes,y=Mbytes.sec,color="Intel IB")) +
geom_line(data=socket_ib_intel,aes(x=X.bytes,y=Mbytes.sec,color="Intel IB",linetype="Socket")) +
geom_point(data=core_tcp,aes(x=X.bytes,y=Mbytes.sec,color="Intel tcp")) +
geom_line(data=core_tcp,aes(x=X.bytes,y=Mbytes.sec,color="Intel tcp",linetype="Core")) +
geom_point(data=socket_tcp,aes(x=X.bytes,y=Mbytes.sec,color="Intel tcp")) +
geom_line(data=socket_tcp,aes(x=X.bytes,y=Mbytes.sec,color="Intel tcp",linetype="Socket")) +
scale_color_manual(name="Protocol", values = c("#ffa600", "#003f5c"))+
scale_linetype_manual(name="Mapping",values=c(1,2))+
labs(title="Intel", subtitle="Thin node: core and socket mapping")  +
theme(plot.title = element_text(size = 13, face = "bold",hjust = 0.5,margin = margin(t = 12)),
plot.subtitle = element_text(size = 10, hjust = 0.5, margin = margin(t = 7, b = 10)),
axis.title = element_text(face = "bold"),
legend.text = element_text(margin = margin(t = 7, b = 7, r=12)),
axis.title.x = element_text(margin = margin(t = 10, b=10)),
axis.title.y = element_text(margin = margin(r = 10,l=10)),
axis.text = element_text(color= "#2f3030", face="bold"))+
geom_vline(xintercept=32768,
color = "black",linetype="dashed", size=0.35)+
geom_vline(xintercept=1048576,
color = "black",linetype="dashed", size=0.35)+
geom_vline(xintercept=19922944,
color = "black",linetype="dashed", size=0.35)+
annotate("text", x=58000, y=24000, label= "L1",color="Black")+
annotate("text", x=1800000, y=24000, label= "L2",color="Black")+
annotate("text", x=29900000, y=24000, label= "L3",color="Black")
grid.arrange(openmpi, intel, ncol=2)
grid.arrange(openmpi, intel, ncol=1)
grid.arrange(openmpi, intel)
openmpi <- ggplot(core_ib_openmpi,aes(x=X.bytes,y=Mbytes.sec,color="UCX IB",linetype="Core")) +
scale_x_continuous(trans='log2',name="Message Size Bytes",breaks=core_ib_openmpi$X.bytes) +
geom_point() + geom_line()+scale_y_continuous(breaks = seq(0,25000,1000),name="MB/s", size = 10) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +
geom_point(data=core_ob1_tcp,aes(x=X.bytes,y=Mbytes.sec,color="OB1 tcp")) +
geom_line(data=core_ob1_tcp,aes(x=X.bytes,y=Mbytes.sec,color="OB1 tcp",linetype="Core")) +
geom_point(data=core_ob1_vader,aes(x=X.bytes,y=Mbytes.sec,color="OB1 vader")) +
geom_line(data=core_ob1_vader,aes(x=X.bytes,y=Mbytes.sec,color="OB1 vader",linetype="Core")) +
geom_point(data=socket_ib_openmpi,aes(x=X.bytes,y=Mbytes.sec,color="UCX IB")) +
geom_line(data=socket_ib_openmpi,aes(x=X.bytes,y=Mbytes.sec,color="UCX IB",linetype="Socket")) +
geom_point(data=socket_ob1_tcp,aes(x=X.bytes,y=Mbytes.sec,color="OB1 tcp")) +
geom_line(data=socket_ob1_tcp,aes(x=X.bytes,y=Mbytes.sec,color="OB1 tcp",linetype="Socket")) +
geom_point(data=socket_ob1_vader,aes(x=X.bytes,y=Mbytes.sec,color="OB1 vader")) +
geom_line(data=socket_ob1_vader,aes(x=X.bytes,y=Mbytes.sec,color="OB1 vader",linetype="Socket")) +
scale_color_manual(name="Protocol", values = c("#ffa600", "#bc5090", "#003f5c"))+
scale_linetype_manual(name="Mapping",values=c(1,2,3))+
labs(title="Openmpi", subtitle="Thind node: core and socket mapping")  +
theme(plot.title = element_text(size = 17, face = "bold",hjust = 0.5,margin = margin(t = 12)),
plot.subtitle = element_text(size = 15, hjust = 0.5, margin = margin(t = 7, b = 10)),
axis.title = element_text(face = "bold"),
legend.text = element_text(margin = margin(t = 7, b = 7, r=12)),
axis.title.x = element_text(margin = margin(t = 10, b=10)),
axis.title.y = element_text(margin = margin(r = 10,l=10)),
axis.text = element_text(color= "#2f3030", face="bold")) +
geom_vline(xintercept=32768,
color = "black",linetype="dashed", size=0.35)+
geom_vline(xintercept=1048576,
color = "black",linetype="dashed", size=0.35)+
geom_vline(xintercept=19922944,
color = "black",linetype="dashed", size=0.35)+
annotate("text", x=58000, y=24000, label= "L1",color="Black")+
annotate("text", x=1800000, y=24000, label= "L2",color="Black")+
annotate("text", x=29900000, y=24000, label= "L3",color="Black")
intel <- ggplot(core_ib_intel,aes(x=X.bytes,y=Mbytes.sec,color="Intel IB",linetype="Core")) +
scale_x_continuous(trans='log2',name="Message Size Bytes",breaks=core_ib_openmpi$X.bytes) +
geom_point() + geom_line()+scale_y_continuous(breaks = seq(0,25000,1000),name="MB/s") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
geom_point(data=socket_ib_intel,aes(x=X.bytes,y=Mbytes.sec,color="Intel IB")) +
geom_line(data=socket_ib_intel,aes(x=X.bytes,y=Mbytes.sec,color="Intel IB",linetype="Socket")) +
geom_point(data=core_tcp,aes(x=X.bytes,y=Mbytes.sec,color="Intel tcp")) +
geom_line(data=core_tcp,aes(x=X.bytes,y=Mbytes.sec,color="Intel tcp",linetype="Core")) +
geom_point(data=socket_tcp,aes(x=X.bytes,y=Mbytes.sec,color="Intel tcp")) +
geom_line(data=socket_tcp,aes(x=X.bytes,y=Mbytes.sec,color="Intel tcp",linetype="Socket")) +
scale_color_manual(name="Protocol", values = c("#ffa600", "#003f5c"))+
scale_linetype_manual(name="Mapping",values=c(1,2))+
labs(title="Intel", subtitle="Thin node: core and socket mapping")  +
theme(plot.title = element_text(size = 17, face = "bold",hjust = 0.5,margin = margin(t = 12)),
plot.subtitle = element_text(size = 15, hjust = 0.5, margin = margin(t = 7, b = 10)),
axis.title = element_text(face = "bold"),
legend.text = element_text(margin = margin(t = 7, b = 7, r=12)),
axis.title.x = element_text(margin = margin(t = 10, b=10)),
axis.title.y = element_text(margin = margin(r = 10,l=10)),
axis.text = element_text(color= "#2f3030", face="bold"))+
geom_vline(xintercept=32768,
color = "black",linetype="dashed", size=0.35)+
geom_vline(xintercept=1048576,
color = "black",linetype="dashed", size=0.35)+
geom_vline(xintercept=19922944,
color = "black",linetype="dashed", size=0.35)+
annotate("text", x=58000, y=24000, label= "L1",color="Black")+
annotate("text", x=1800000, y=24000, label= "L2",color="Black")+
annotate("text", x=29900000, y=24000, label= "L3",color="Black")
grid.arrange(openmpi, intel, ncol=2)
ggplot(node_ib,aes(x=X.bytes,y=mbs,color="UCX IB")) +
scale_x_continuous(trans='log2',name="Message Size Bytes",breaks=core_ib$X.bytes)+
scale_y_continuous(breaks = seq(0,13000,500),name="MB/s")  + geom_point() + geom_line()  +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
geom_point(data=node_ob1_tcp,aes(x=X.bytes,y=mbs,color="OB1 tcp")) +
geom_line(data=node_ob1_tcp,aes(x=X.bytes,y=mbs,color="OB1 tcp")) +
geom_point(data=node_ib_intel,aes(x=X.bytes,y=mbs,color="Intel IB")) +
geom_line(data=node_ib_intel,aes(x=X.bytes,y=mbs,color="Intel IB")) +
labs(title="PingPong bandwidth", subtitle="Thin node,node mapping")  +
theme(plot.title = element_text(size = 17, face = "bold",hjust = 0.5,margin = margin(t = 12)),
plot.subtitle = element_text(size = 15, hjust = 0.5, margin = margin(t = 7, b = 10)),
axis.title = element_text(face = "bold"), legend.text = element_text(margin = margin(t = 7, b = 7, r=12)),
axis.title.x = element_text(margin = margin(t = 10, b=10)),
axis.title.y = element_text(margin = margin(r = 10,l=10)),
axis.text = element_text(color= "#2f3030", face="bold"))
ggplot(node_ib_openmpi,aes(x=X.bytes,y=mbs,color="UCX IB")) +
scale_x_continuous(trans='log2',name="Message Size Bytes",breaks=core_ib$X.bytes)+
scale_y_continuous(breaks = seq(0,13000,500),name="MB/s")  + geom_point() + geom_line()  +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
geom_point(data=node_ob1_tcp,aes(x=X.bytes,y=mbs,color="OB1 tcp")) +
geom_line(data=node_ob1_tcp,aes(x=X.bytes,y=mbs,color="OB1 tcp")) +
geom_point(data=node_ib_intel,aes(x=X.bytes,y=mbs,color="Intel IB")) +
geom_line(data=node_ib_intel,aes(x=X.bytes,y=mbs,color="Intel IB")) +
labs(title="PingPong bandwidth", subtitle="Thin node,node mapping")  +
theme(plot.title = element_text(size = 17, face = "bold",hjust = 0.5,margin = margin(t = 12)),
plot.subtitle = element_text(size = 15, hjust = 0.5, margin = margin(t = 7, b = 10)),
axis.title = element_text(face = "bold"), legend.text = element_text(margin = margin(t = 7, b = 7, r=12)),
axis.title.x = element_text(margin = margin(t = 10, b=10)),
axis.title.y = element_text(margin = margin(r = 10,l=10)),
axis.text = element_text(color= "#2f3030", face="bold"))
ggplot(node_ib_openmpi,aes(x=X.bytes,y=mbs,color="UCX IB")) +
scale_x_continuous(trans='log2',name="Message Size Bytes",breaks=core_ib_openmpi$X.bytes)+
scale_y_continuous(breaks = seq(0,13000,500),name="MB/s")  + geom_point() + geom_line()  +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
geom_point(data=node_ob1_tcp,aes(x=X.bytes,y=mbs,color="OB1 tcp")) +
geom_line(data=node_ob1_tcp,aes(x=X.bytes,y=mbs,color="OB1 tcp")) +
geom_point(data=node_ib_intel,aes(x=X.bytes,y=mbs,color="Intel IB")) +
geom_line(data=node_ib_intel,aes(x=X.bytes,y=mbs,color="Intel IB")) +
labs(title="PingPong bandwidth", subtitle="Thin node,node mapping")  +
theme(plot.title = element_text(size = 17, face = "bold",hjust = 0.5,margin = margin(t = 12)),
plot.subtitle = element_text(size = 15, hjust = 0.5, margin = margin(t = 7, b = 10)),
axis.title = element_text(face = "bold"), legend.text = element_text(margin = margin(t = 7, b = 7, r=12)),
axis.title.x = element_text(margin = margin(t = 10, b=10)),
axis.title.y = element_text(margin = margin(r = 10,l=10)),
axis.text = element_text(color= "#2f3030", face="bold"))
ggplot(node_ib_openmpi,aes(x=X.bytes,y=Mbytes.sec,color="UCX IB")) +
scale_x_continuous(trans='log2',name="Message Size Bytes",breaks=core_ib_openmpi$X.bytes)+
scale_y_continuous(breaks = seq(0,13000,500),name="MB/s")  + geom_point() + geom_line()  +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
geom_point(data=node_ob1_tcp,aes(x=X.bytes,y=Mbytes.sec,color="OB1 tcp")) +
geom_line(data=node_ob1_tcp,aes(x=X.bytes,y=Mbytes.sec,color="OB1 tcp")) +
geom_point(data=node_ib_intel,aes(x=X.bytes,y=Mbytes.sec,color="Intel IB")) +
geom_line(data=node_ib_intel,aes(x=X.bytes,y=Mbytes.sec,color="Intel IB")) +
labs(title="PingPong bandwidth", subtitle="Thin node,node mapping")  +
theme(plot.title = element_text(size = 17, face = "bold",hjust = 0.5,margin = margin(t = 12)),
plot.subtitle = element_text(size = 15, hjust = 0.5, margin = margin(t = 7, b = 10)),
axis.title = element_text(face = "bold"), legend.text = element_text(margin = margin(t = 7, b = 7, r=12)),
axis.title.x = element_text(margin = margin(t = 10, b=10)),
axis.title.y = element_text(margin = margin(r = 10,l=10)),
axis.text = element_text(color= "#2f3030", face="bold"))
core_ib_openmpi_gpu <- read.csv("~/OneDrive/github/HPC/section_2/gpu_node/csv/mean/openmpi/core_ib.csv",
skip = 2, header = TRUE)
core_ob1_tcp_gpu <- read.csv("~/OneDrive/github/HPC/section_2/gpu_node/csv/mean/openmpi/core_ob1_tcp.csv",
skip = 2, header = TRUE)
core_ob1_vader_gpu <- read.csv("~/OneDrive/github/HPC/section_2/gpu_node/csv/mean/openmpi/core_ob1_vader.csv",
skip = 2, header = TRUE)
node_ib_openmpi_gpu <- read.csv("~/OneDrive/github/HPC/section_2/gpu_node/csv/mean/openmpi/node_ib.csv",
skip = 2, header = TRUE)
node_ob1_tcp_gpu <- read.csv("~/OneDrive/github/HPC/section_2/gpu_node/csv/mean/openmpi/node_ob1_tcp.csv",
skip = 2, header = TRUE)
node_ucx_mlx5_gpu <- read.csv("~/OneDrive/github/HPC/section_2/gpu_node/csv/mean/openmpi/node_ucx_mlx5_0.csv",
skip = 2, header = TRUE)
socket_ib_openmpi_gpu <- read.csv("~/OneDrive/github/HPC/section_2/gpu_node/csv/mean/openmpi/socket_ib.csv",
skip = 2, header = TRUE)
socket_ob1_tcp_gpu <- read.csv("~/OneDrive/github/HPC/section_2/gpu_node/csv/mean/openmpi/socket_ob1_tcp.csv",
skip = 2, header = TRUE)
socket_ob1_vader_gpu <- read.csv("~/OneDrive/github/HPC/section_2/gpu_node/csv/mean/openmpi/socket_ob1_vader.csv",
skip = 2, header = TRUE)
core_ib_intel_gpu <- read.csv("~/OneDrive/github/HPC/section_2/gpu_node/csv/mean/intel/core_ib.csv",
skip = 2, header = TRUE)
core_mlx_gpu <- read.csv("~/OneDrive/github/HPC/section_2/gpu_node/csv/mean/intel/core_mlx.csv",
skip = 2, header = TRUE)
core_tcp_gpu <- read.csv("~/OneDrive/github/HPC/section_2/gpu_node/csv/mean/intel/core_tcp.csv",
skip = 2, header = TRUE)
node_ib_intel_gpu <- read.csv("~/OneDrive/github/HPC/section_2/gpu_node/csv/mean/intel/node_ib.csv",
skip = 2, header = TRUE)
node_mlx_gpu <- read.csv("~/OneDrive/github/HPC/section_2/gpu_node/csv/mean/intel/node_mlx.csv",
skip = 2, header = TRUE)
node_tcp_gpu <- read.csv("~/OneDrive/github/HPC/section_2/gpu_node/csv/mean/intel/node_tcp.csv",
skip = 2, header = TRUE)
socket_ib_intel_gpu <- read.csv("~/OneDrive/github/HPC/section_2/gpu_node/csv/mean/intel/socket_ib.csv",
skip = 2, header = TRUE)
socket_mlx_gpu <- read.csv("~/OneDrive/github/HPC/section_2/gpu_node/csv/mean/intel/socket_mlx.csv",
skip = 2, header = TRUE)
socket_tcp_gpu <- read.csv("~/OneDrive/github/HPC/section_2/gpu_node/csv/mean/intel/socket_tcp.csv",
skip = 2, header = TRUE)
openmpi_gpu <- ggplot(core_ib_openmpi_gpu,aes(x=X.bytes,y=Mbytes.sec,color="UCX IB",linetype="Core")) +
scale_x_continuous(trans='log2',name="Message Size Bytes",breaks=core_ib_openmpi_gpu$X.bytes) +
geom_point() + geom_line()+scale_y_continuous(breaks = seq(0,25000,1000),name="MB/s") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +
geom_point(data=core_ob1_tcp_gpu,aes(x=X.bytes,y=Mbytes.sec,color="OB1 tcp")) +
geom_line(data=core_ob1_tcp_gpu,aes(x=X.bytes,y=Mbytes.sec,color="OB1 tcp",linetype="Core")) +
geom_point(data=core_ob1_vader_gpu,aes(x=X.bytes,y=Mbytes.sec,color="OB1 vader")) +
geom_line(data=core_ob1_vader_gpu,aes(x=X.bytes,y=Mbytes.sec,color="OB1 vader",linetype="Core")) +
geom_point(data=socket_ib_openmpi_gpu,aes(x=X.bytes,y=Mbytes.sec,color="UCX IB")) +
geom_line(data=socket_ib_openmpi_gpu,aes(x=X.bytes,y=Mbytes.sec,color="UCX IB",linetype="Socket")) +
geom_point(data=socket_ob1_tcp_gpu,aes(x=X.bytes,y=Mbytes.sec,color="OB1 tcp")) +
geom_line(data=socket_ob1_tcp_gpu,aes(x=X.bytes,y=Mbytes.sec,color="OB1 tcp",linetype="Socket")) +
geom_point(data=socket_ob1_vader_gpu,aes(x=X.bytes,y=Mbytes.sec,color="OB1 vader")) +
geom_line(data=socket_ob1_vader_gpu,aes(x=X.bytes,y=Mbytes.sec,color="OB1 vader",linetype="Socket")) +
scale_color_manual(name="Protocol", values = c("#ffa600", "#bc5090", "#003f5c"))+
scale_linetype_manual(name="Mapping",values=c(1,2,3))+
labs(title="Openmpi", subtitle="GPU node: core and socket mapping")  +
theme(plot.title = element_text(size = 17, face = "bold",hjust = 0.5,margin = margin(t = 12)),
plot.subtitle = element_text(size = 15, hjust = 0.5, margin = margin(t = 7, b = 10)),
axis.title = element_text(face = "bold"),
legend.text = element_text(margin = margin(t = 7, b = 7, r=12)),
axis.title.x = element_text(margin = margin(t = 10, b=10)),
axis.title.y = element_text(margin = margin(r = 10,l=10)),
axis.text = element_text(color= "#2f3030", face="bold")) +
geom_vline(xintercept=32768,
color = "black",linetype="dashed", size=0.35)+
geom_vline(xintercept=1048576,
color = "black",linetype="dashed", size=0.35)+
geom_vline(xintercept=19922944,
color = "black",linetype="dashed", size=0.35)+
annotate("text", x=58000, y=24000, label= "L1",color="Black")+
annotate("text", x=1800000, y=24000, label= "L2",color="Black")+
annotate("text", x=29900000, y=24000, label= "L3",color="Black")
intel_gpu <- ggplot(core_ib_intel_gpu,aes(x=X.bytes,y=Mbytes.sec,color="Intel IB",linetype="Core")) +
scale_x_continuous(trans='log2',name="Message Size Bytes",breaks=core_ib_openmpi_gpu$X.bytes) +
geom_point() + geom_line()+scale_y_continuous(breaks = seq(0,25000,1000),name="MB/s") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
geom_point(data=socket_ib_intel_gpu,aes(x=X.bytes,y=Mbytes.sec,color="Intel IB")) +
geom_line(data=socket_ib_intel_gpu,aes(x=X.bytes,y=Mbytes.sec,color="Intel IB",linetype="Socket")) +
geom_point(data=core_tcp_gpu,aes(x=X.bytes,y=Mbytes.sec,color="Intel tcp")) +
geom_line(data=core_tcp_gpu,aes(x=X.bytes,y=Mbytes.sec,color="Intel tcp",linetype="Core")) +
geom_point(data=socket_tcp_gpu,aes(x=X.bytes,y=Mbytes.sec,color="Intel tcp")) +
geom_line(data=socket_tcp_gpu,aes(x=X.bytes,y=Mbytes.sec,color="Intel tcp",linetype="Socket")) +
scale_color_manual(name="Protocol", values = c("#ffa600", "#003f5c"))+
scale_linetype_manual(name="Mapping",values=c(1,2))+
labs(title="Intel", subtitle="Thin node: core and socket mapping")  +
theme(plot.title = element_text(size = 17, face = "bold",hjust = 0.5,margin = margin(t = 12)),
plot.subtitle = element_text(size = 15, hjust = 0.5, margin = margin(t = 7, b = 10)),
axis.title = element_text(face = "bold"),
legend.text = element_text(margin = margin(t = 7, b = 7, r=12)),
axis.title.x = element_text(margin = margin(t = 10, b=10)),
axis.title.y = element_text(margin = margin(r = 10,l=10)),
axis.text = element_text(color= "#2f3030", face="bold"))+
geom_vline(xintercept=32768,
color = "black",linetype="dashed", size=0.35)+
geom_vline(xintercept=1048576,
color = "black",linetype="dashed", size=0.35)+
geom_vline(xintercept=19922944,
color = "black",linetype="dashed", size=0.35)+
annotate("text", x=58000, y=24000, label= "L1",color="Black")+
annotate("text", x=1800000, y=24000, label= "L2",color="Black")+
annotate("text", x=29900000, y=24000, label= "L3",color="Black")
grid.arrange(openmpi_gpu, intel_gpu, ncol=2)
ggplot(node_ib_openmpi_gpu,aes(x=X.bytes,y=Mbytes.sec,color="UCX IB")) +
scale_x_continuous(trans='log2',name="Message Size Bytes",breaks=core_ib_openmpi_gpu$X.bytes)+
scale_y_continuous(breaks = seq(0,13000,500),name="MB/s")  + geom_point() + geom_line()  +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
geom_point(data=node_ob1_tcp_gpu,aes(x=X.bytes,y=Mbytes.sec,color="OB1 tcp")) +
geom_line(data=node_ob1_tcp_gpu,aes(x=X.bytes,y=Mbytes.sec,color="OB1 tcp")) +
geom_point(data=node_ib_intel_gpu,aes(x=X.bytes,y=Mbytes.sec,color="Intel IB")) +
geom_line(data=node_ib_intel_gpu,aes(x=X.bytes,y=Mbytes.sec,color="Intel IB")) +
labs(title="PingPong bandwidth", subtitle="GPU node,node mapping")  +
theme(plot.title = element_text(size = 17, face = "bold",hjust = 0.5,margin = margin(t = 12)),
plot.subtitle = element_text(size = 15, hjust = 0.5, margin = margin(t = 7, b = 10)),
axis.title = element_text(face = "bold"), legend.text = element_text(margin = margin(t = 7, b = 7, r=12)),
axis.title.x = element_text(margin = margin(t = 10, b=10)),
axis.title.y = element_text(margin = margin(r = 10,l=10)),
axis.text = element_text(color= "#2f3030", face="bold"))
node_thin <- ggplot(node_ib_openmpi,aes(x=X.bytes,y=Mbytes.sec,color="UCX IB")) +
scale_x_continuous(trans='log2',name="Message Size Bytes",breaks=core_ib_openmpi$X.bytes)+
scale_y_continuous(breaks = seq(0,13000,500),name="MB/s")  + geom_point() + geom_line()  +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
geom_point(data=node_ob1_tcp,aes(x=X.bytes,y=Mbytes.sec,color="OB1 tcp")) +
geom_line(data=node_ob1_tcp,aes(x=X.bytes,y=Mbytes.sec,color="OB1 tcp")) +
geom_point(data=node_ib_intel,aes(x=X.bytes,y=Mbytes.sec,color="Intel IB")) +
geom_line(data=node_ib_intel,aes(x=X.bytes,y=Mbytes.sec,color="Intel IB")) +
labs(title="PingPong bandwidth", subtitle="Thin node: node mapping")  +
theme(plot.title = element_text(size = 17, face = "bold",hjust = 0.5,margin = margin(t = 12)),
plot.subtitle = element_text(size = 15, hjust = 0.5, margin = margin(t = 7, b = 10)),
axis.title = element_text(face = "bold"), legend.text = element_text(margin = margin(t = 7, b = 7, r=12)),
axis.title.x = element_text(margin = margin(t = 10, b=10)),
axis.title.y = element_text(margin = margin(r = 10,l=10)),
axis.text = element_text(color= "#2f3030", face="bold"))
node_gpu <- ggplot(node_ib_openmpi_gpu,aes(x=X.bytes,y=Mbytes.sec,color="UCX IB")) +
scale_x_continuous(trans='log2',name="Message Size Bytes",breaks=core_ib_openmpi_gpu$X.bytes)+
scale_y_continuous(breaks = seq(0,13000,500),name="MB/s")  + geom_point() + geom_line()  +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
geom_point(data=node_ob1_tcp_gpu,aes(x=X.bytes,y=Mbytes.sec,color="OB1 tcp")) +
geom_line(data=node_ob1_tcp_gpu,aes(x=X.bytes,y=Mbytes.sec,color="OB1 tcp")) +
geom_point(data=node_ib_intel_gpu,aes(x=X.bytes,y=Mbytes.sec,color="Intel IB")) +
geom_line(data=node_ib_intel_gpu,aes(x=X.bytes,y=Mbytes.sec,color="Intel IB")) +
labs(title="PingPong bandwidth", subtitle="GPU node: node mapping")  +
theme(plot.title = element_text(size = 17, face = "bold",hjust = 0.5,margin = margin(t = 12)),
plot.subtitle = element_text(size = 15, hjust = 0.5, margin = margin(t = 7, b = 10)),
axis.title = element_text(face = "bold"), legend.text = element_text(margin = margin(t = 7, b = 7, r=12)),
axis.title.x = element_text(margin = margin(t = 10, b=10)),
axis.title.y = element_text(margin = margin(r = 10,l=10)),
axis.text = element_text(color= "#2f3030", face="bold"))
node_thin <- ggplot(node_ib_openmpi,aes(x=X.bytes,y=Mbytes.sec,color="UCX IB")) +
scale_x_continuous(trans='log2',name="Message Size Bytes",breaks=core_ib_openmpi$X.bytes)+
scale_y_continuous(breaks = seq(0,13000,500),name="MB/s")  + geom_point() + geom_line()  +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
geom_point(data=node_ob1_tcp,aes(x=X.bytes,y=Mbytes.sec,color="OB1 tcp")) +
geom_line(data=node_ob1_tcp,aes(x=X.bytes,y=Mbytes.sec,color="OB1 tcp")) +
geom_point(data=node_ib_intel,aes(x=X.bytes,y=Mbytes.sec,color="Intel IB")) +
geom_line(data=node_ib_intel,aes(x=X.bytes,y=Mbytes.sec,color="Intel IB")) +
labs(title="PingPong bandwidth", subtitle="Thin node: node mapping")  +
theme(plot.title = element_text(size = 17, face = "bold",hjust = 0.5,margin = margin(t = 12)),
plot.subtitle = element_text(size = 15, hjust = 0.5, margin = margin(t = 7, b = 10)),
axis.title = element_text(face = "bold"), legend.text = element_text(margin = margin(t = 7, b = 7, r=12)),
axis.title.x = element_text(margin = margin(t = 10, b=10)),
axis.title.y = element_text(margin = margin(r = 10,l=10)),
axis.text = element_text(color= "#2f3030", face="bold"))
node_gpu <- ggplot(node_ib_openmpi_gpu,aes(x=X.bytes,y=Mbytes.sec,color="UCX IB")) +
scale_x_continuous(trans='log2',name="Message Size Bytes",breaks=core_ib_openmpi_gpu$X.bytes)+
scale_y_continuous(breaks = seq(0,13000,500),name="MB/s")  + geom_point() + geom_line()  +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
geom_point(data=node_ob1_tcp_gpu,aes(x=X.bytes,y=Mbytes.sec,color="OB1 tcp")) +
geom_line(data=node_ob1_tcp_gpu,aes(x=X.bytes,y=Mbytes.sec,color="OB1 tcp")) +
geom_point(data=node_ib_intel_gpu,aes(x=X.bytes,y=Mbytes.sec,color="Intel IB")) +
geom_line(data=node_ib_intel_gpu,aes(x=X.bytes,y=Mbytes.sec,color="Intel IB")) +
labs(title="PingPong bandwidth", subtitle="GPU node: node mapping")  +
theme(plot.title = element_text(size = 17, face = "bold",hjust = 0.5,margin = margin(t = 12)),
plot.subtitle = element_text(size = 15, hjust = 0.5, margin = margin(t = 7, b = 10)),
axis.title = element_text(face = "bold"), legend.text = element_text(margin = margin(t = 7, b = 7, r=12)),
axis.title.x = element_text(margin = margin(t = 10, b=10)),
axis.title.y = element_text(margin = margin(r = 10,l=10)),
axis.text = element_text(color= "#2f3030", face="bold"))
grid.arrange(node_thin, node_intel, ncol=2)
grid.arrange(node_thin, node_gpu, ncol=2)
matrix <- read.csv("~/OneDrive/github/HPC/section_1/matrix_times.csv")
matrix <- read.csv("~/OneDrive/github/HPC/section_1/matrix_times.csv", header = TRUE)
View(matrix)
ggplot(matrix, aes(x=Distribution, y=Topology)) +
geom_point(size=2, shape=23)
ggplot(matrix, aes(x=Topology, y=Distribution)) +
geom_point(size=2, shape=23)
ggplot(matrix, aes(x=Topology, y=Distribution)) +
geom_point(size=2, shape=23) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(matrix, aes(x=Topology, y=Distribution)) +
geom_point() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(matrix, aes(x=Topology, y=t.usec)) +
geom_point() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(matrix, aes(x=Topology, y=Time)) +
geom_point() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(matrix, aes(x=Topology, y=Time)) +
scale_y_continuous(breaks=seq(0,1,0.2))
geom_point() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(matrix, aes(x=Topology, y=Time)) +
geom_point() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(matrix, aes(x=Topology, y=Time, color = genus)) +
geom_point() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(matrix, aes(x=Topology, y=Time, color = c("#ffa600", "#bc5090", "#003f5c")) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(matrix, aes(x=Topology, y=Time, color = c("#ffa600", "#bc5090", "#003f5c"))) +
geom_point() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(matrix, aes(x=Topology, y=Time, color = c("#ffa600", "#bc5090", "#003f5c"))) +
geom_point() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(matrix, aes(x=Topology, y=Time, color = c("#ffa600", "#bc5090", "#003f5c"))) +
geom_point()
ggplot(matrix, aes(x=Topology, y=Time, shape=cyl, color=cyl)) +
geom_point() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(matrix, aes(x=Topology, y=Time, shape=cyl, color=cyl)) +
geom_point()
ggplot(matrix, aes(x=Topology, y=Time, colour=as.factor(matrix$Time))) +
geom_point()
ggplot(matrix, aes(x=Distribution, y=Time, colour=as.factor(matrix$Time))) +
geom_point()
ggplot(matrix, aes(x=Distribution, y=Topology, colour=as.factor(matrix$Time))) +
geom_point()
